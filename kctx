#!/usr/bin/env bash

set -o pipefail

usage() {
  cat <<"EOF"
This is the context switch helper for kubernetes.

usage:
  kctx           : show context list or use peco to filter context
  kctx <NAME>    : switch to <NAME> context

  kctx -h        : show this message

EOF
}

if [ "$1" = "-h" ]; then
  usage
  return 0
fi

# kubectl required
which kubectl > /dev/null 2>&1
if [ "$?" -eq "1" ]; then
  echo plz install kubectl
  return 1
fi

unset KUBECONFIG

KUBECONFIGDIR=${HOME}/.kube/
KCTXDIR=${KUBECONFIGDIR}/kctx/
[ ! -d ${KCTXDIR} ] && mkdir ${KCTXDIR}

# Get context
if [ "$#" -eq "0" ]; then
  which peco > /dev/null 2>&1
  if [ "$?" -eq "1" ]; then
    kubectl config get-contexts -o name
    return 1
  fi

  CONTEXT=`KUBECONFIG=${KUBECONFIGDIR}/config kubectl config get-contexts -o name | peco`
else
  CONTEXT=$1
fi

# Create each context
if [ "${CONTEXT}" = "" ]; then
    usage
    return 1
fi

FILENAME=${KCTXDIR}/config-${CONTEXT}
if [ ! -f ${FILENAME} ]; then
  CURRENT_CONTEXT=`kubectl config current-context`
  kubectl config use-context ${CONTEXT} > /dev/null
  kubectl config view --minify --raw > ${FILENAME}
  # Restore the original
  kubectl config use-context ${CURRENT_CONTEXT} > /dev/null 2>&1
fi

# Switched
if [ -f ${FILENAME} ]; then
  export KUBECONFIG=${FILENAME}
  echo "Switched to context \"${CONTEXT}\"."
else
  return 1
fi
